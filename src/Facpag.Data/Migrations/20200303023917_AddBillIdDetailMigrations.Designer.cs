// <auto-generated />
using System;
using Facpag.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200303023917_AddBillIdDetailMigrations")]
    partial class AddBillIdDetailMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Facpag.Domain.Entities.BillEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasColumnName("Client")
                        .HasColumnType("varchar(254) CHARACTER SET utf8mb4")
                        .HasMaxLength(254);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnName("PaymentType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telephone")
                        .HasColumnName("Telephone")
                        .HasColumnType("varchar(12) CHARACTER SET utf8mb4")
                        .HasMaxLength(12);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("Facpag.Domain.Entities.DetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BillId")
                        .HasColumnName("Billid")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProductId")
                        .HasColumnName("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnName("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Detail");
                });

            modelBuilder.Entity("Facpag.Domain.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Facpag.Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("Facpag.Domain.Entities.BillEntity", b =>
                {
                    b.OwnsOne("Facpag.Domain.ValueObject.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("BillEntityId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Address")
                                .HasColumnName("Email")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.HasKey("BillEntityId");

                            b1.ToTable("Bill");

                            b1.WithOwner()
                                .HasForeignKey("BillEntityId");
                        });
                });

            modelBuilder.Entity("Facpag.Domain.Entities.DetailEntity", b =>
                {
                    b.OwnsOne("Facpag.Domain.Entities.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("DetailEntityId")
                                .HasColumnType("char(36)");

                            b1.Property<double>("Amount")
                                .HasColumnName("Price")
                                .HasColumnType("double");

                            b1.HasKey("DetailEntityId");

                            b1.ToTable("Detail");

                            b1.WithOwner()
                                .HasForeignKey("DetailEntityId");
                        });

                    b.OwnsOne("Facpag.Domain.ValueObject.ProductName", "ProductName", b1 =>
                        {
                            b1.Property<Guid>("DetailEntityId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("ProductName")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.HasKey("DetailEntityId");

                            b1.ToTable("Detail");

                            b1.WithOwner()
                                .HasForeignKey("DetailEntityId");
                        });
                });

            modelBuilder.Entity("Facpag.Domain.Entities.ProductEntity", b =>
                {
                    b.OwnsOne("Facpag.Domain.Entities.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("ProductEntityId")
                                .HasColumnType("char(36)");

                            b1.Property<double>("Amount")
                                .HasColumnName("Price")
                                .HasColumnType("double");

                            b1.HasKey("ProductEntityId");

                            b1.ToTable("Product");

                            b1.WithOwner()
                                .HasForeignKey("ProductEntityId");
                        });

                    b.OwnsOne("Facpag.Domain.ValueObject.ProductName", "Name", b1 =>
                        {
                            b1.Property<Guid>("ProductEntityId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("Name")
                                .HasColumnType("varchar(254) CHARACTER SET utf8mb4")
                                .HasMaxLength(254);

                            b1.HasKey("ProductEntityId");

                            b1.ToTable("Product");

                            b1.WithOwner()
                                .HasForeignKey("ProductEntityId");
                        });

                    b.OwnsOne("Facpag.Domain.ValueObject.Stock", "Stock", b1 =>
                        {
                            b1.Property<Guid>("ProductEntityId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("Quantity")
                                .HasColumnName("Stock")
                                .HasColumnType("int");

                            b1.HasKey("ProductEntityId");

                            b1.ToTable("Product");

                            b1.WithOwner()
                                .HasForeignKey("ProductEntityId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
